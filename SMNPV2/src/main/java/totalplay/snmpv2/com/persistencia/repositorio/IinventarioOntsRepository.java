package totalplay.snmpv2.com.persistencia.repositorio;

import org.springframework.data.mongodb.repository.Aggregation;
import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.data.repository.query.Param;

import totalplay.snmpv2.com.negocio.dto.OntsConfiguracionDto;
import totalplay.snmpv2.com.persistencia.entidades.AuxiliarEstatusEntity;
import totalplay.snmpv2.com.persistencia.entidades.CatOltsEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioAuxTransEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsAuxEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsTmpEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioPuertosEntity;

import java.util.List;

public interface IinventarioOntsRepository extends MongoRepository<InventarioOntsEntity, String> {
	
	@Aggregation(pipeline = { 
			  "{$match:{tipo:\"E\"}}\n"
			, "{\n"
			+ "	$lookup:{\n"
			+ "		from: \"auxiliar\",\n"
			+ "		let:{oid:\"$oid\", olt:\"$id_olts\", region:\"$id_region\"},\n"
			+ "		pipeline:[\n"
			+ "		\n"
			+ "		    {\n"
			+ "            $match: {\n"
			+ "              $expr: {\n"
			+ "                $and: [\n"
			+ "                  {\n"
			+ "                    $eq: [\"$id_region\", \"$$region\"],\n"
			+ "                  },\n"
			+ "                  {\n"
			+ "                    $eq: [\"$id_olt\", \"$$olt\"],\n"
			+ "                  },\n"
			+ "                  {\n"
			+ "                    $eq: [\"$oid\", \"$$oid\"],\n"
			+ "                  }\n"
			+ "                ],\n"
			+ "              },\n"
			+ "            },\n"
			+ "       }\n"
			+ "		   \n"
			+ "		],\n"
			+ "		as: \"olt\",\n"
			+ "	}\n"
			+ "}\n"
			, "{\n"
			+ "    $match:{olt:{$eq:[]}}\n"
			+ "}\n"
			, "{$unset:[\"olt\"]}"
			, "{\n"
			  + "    $lookup: {\n"
			  + "      from: 'cat_olts',\n"
			  + "      localField: 'id_olts',\n"
			  + "      foreignField: 'id_olt',\n"
			  + "      pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "      ],\n"
			  + "      as: 'olt',\n"
			  + "    },\n"
			  + "}\n"
			  , "{$match: {olt: {$ne: []}}}\n"
			  , "{$unwind: '$olt'}\n"
			  , "{\n"
			  + "	$project: {\n"
			  + "	  ont: {\n"
			  + "		_id: '$_id',\n"
			  + "		numero_serie: '$numero_serie',\n"
			  + "		oid: '$oid',\n"
			  + "		fecha_descubrimiento: '$fecha_descubrimiento',\n"
			  + "		id_olts: '$id_olts',\n"
			  + "		estatus: '$estatus',\n"
			  + "		id_ejecucion: '$id_ejecucion',\n"
			  + "		alias: '$alias',\n"
			  + "		id_region: '$id_region',\n"
			  + "		frame: '$frame',\n"
			  + "		slot: '$slot',\n"
			  + "		port: '$port',\n"
			  + "		uid: '$uid',\n"
			  + "		tipo: '$tipo',\n"
			  + "		descripcionAlarma: '$descripcionAlarma',\n"
			  + "		tecnologia: '$tecnologia',\n"
			  + "		lastDownTime: '$lastDownTime',\n"
			  + "		actualizacion: '$actualizacion',\n"
			  + "		vip: '$vip',\n"	
			  + "	  },\n"
			  + "	  configuracion: '$olt.configuracion',\n"
			  + "	  ip: '$olt.ip',\n"
			  + "	  tecnologia: '$olt.tecnologia',\n"
			  + "	  id_configuracion: '$olt.id_configuracion',\n"
			  + "	},\n"
			  + "}\n"
			  , "{$unset: ['_id']}"})
	List<OntsConfiguracionDto> findOntsEmpresarialesMetricas();

	@Aggregation(pipeline = { 
			  "{$match:{tipo:\"E\"}}\n"
			, "{\n"
			+ "	$lookup:{\n"
			+ "		from: \"auxiliar\",\n"
			+ "		let:{oid:\"$id_puerto\", olt:\"$id_olts\", region:\"$id_region\"},\n"
			+ "		pipeline:[\n"
			+ "		\n"
			+ "		    {\n"
			+ "            $match: {\n"
			+ "              $expr: {\n"
			+ "                $and: [\n"
			+ "                  {\n"
			+ "                    $eq: [\"$id_region\", \"$$region\"],\n"
			+ "                  },\n"
			+ "                  {\n"
			+ "                    $eq: [\"$id_olt\", \"$$olt\"],\n"
			+ "                  },\n"
			+ "                  {\n"
			+ "                    $eq: [\"$oid\", \"$$oid\"],\n"
			+ "                  }\n"
			+ "                ],\n"
			+ "              },\n"
			+ "            },\n"
			+ "       }\n"
			+ "		   \n"
			+ "		],\n"
			+ "		as: \"olt\",\n"
			+ "	}\n"
			+ "}\n"
			, "{\n"
			+ "    $match:{olt:{$eq:[]}}\n"
			+ "}\n"
			, "{$unset:[\"olt\"]}"
			, "{\n"
			  + "    $lookup: {\n"
			  + "      from: 'cat_olts',\n"
			  + "      localField: 'id_olts',\n"
			  + "      foreignField: 'id_olt',\n"
			  + "      pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "      ],\n"
			  + "      as: 'olt',\n"
			  + "    },\n"
			  + "}\n"
			  , "{$match: {olt: {$ne: []}}}\n"
			  , "{$unwind: '$olt'}\n"
			  , "{\n"
			  + "	$project: {\n"
			  + "	  ont: {\n"
			  + "		_id: '$_id',\n"
			  + "		numero_serie: '$numero_serie',\n"
			  + "		oid: '$oid',\n"
			  + "		fecha_descubrimiento: '$fecha_descubrimiento',\n"
			  + "		id_olts: '$id_olts',\n"
			  + "		estatus: '$estatus',\n"
			  + "		id_ejecucion: '$id_ejecucion',\n"
			  + "		alias: '$alias',\n"
			  + "		id_region: '$id_region',\n"
			  + "		id_puerto: '$id_puerto',\n"
			  + "		frame: '$frame',\n"
			  + "		slot: '$slot',\n"
			  + "		port: '$port',\n"
			  + "		uid: '$uid',\n"
			  + "		tipo: '$tipo',\n"
			  + "		descripcionAlarma: '$descripcionAlarma',\n"
			  + "		tecnologia: '$tecnologia',\n"
			  + "		lastDownTime: '$lastDownTime',\n"
			  + "		actualizacion: '$actualizacion',\n"
			  + "		vip: '$vip',\n"	
			  + "	  },\n"
			  + "	  configuracion: '$olt.configuracion',\n"
			  + "	  ip: '$olt.ip',\n"
			  + "	  tecnologia: '$olt.tecnologia',\n"
			  + "	  id_configuracion: '$olt.id_configuracion',\n"
			  + "	},\n"
			  + "}\n"
			  , "{$unset: ['_id']}"})
	List<OntsConfiguracionDto> findOntsEmpresarialesMetricasFrameSlotPort();
	
	
	@Aggregation(pipeline = { 
			  "{$match:{tipo:\"E\"}}\n"
			, "{\n"
			+ "	$lookup:{\n"
			+ "		from: \"tb_status_onts\",\n"
			+ "		let:{oid:\"$oid\", olt:\"$id_olts\", region:\"$id_region\"},\n"
			+ "		pipeline:[\n"
			+ "		\n"
			+ "		    {\n"
			+ "            $match: {\n"
			+ "              $expr: {\n"
			+ "                $and: [\n"
			+ "                  {\n"
			+ "                    $eq: [\"$id_region\", \"$$region\"],\n"
			+ "                  },\n"
			+ "                  {\n"
			+ "                    $eq: [\"$id_olt\", \"$$olt\"],\n"
			+ "                  },\n"
			+ "                  {\n"
			+ "                    $eq: [\"$oid\", \"$$oid\"],\n"
			+ "                  }\n"
			+ "                ],\n"
			+ "              },\n"
			+ "            },\n"
			+ "       }\n"
			+ "		   \n"
			+ "		],\n"
			+ "		as: \"olt\",\n"
			+ "	}\n"
			+ "}\n"
			, "{\n"
			+ "    $match:{olt:{$eq:[]}}\n"
			+ "}\n"
			, "{$unset:[\"olt\"]}"
			, "{\n"
			  + "    $lookup: {\n"
			  + "      from: 'cat_olts',\n"
			  + "      localField: 'id_olts',\n"
			  + "      foreignField: 'id_olt',\n"
			  + "      pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "      ],\n"
			  + "      as: 'olt',\n"
			  + "    },\n"
			  + "}\n"
			  , "{$match: {olt: {$ne: []}}}\n"
			  , "{$unwind: '$olt'}\n"
			  , "{\n"
			  + "	$project: {\n"
			  + "	  ont: {\n"
			  + "		_id: '$_id',\n"
			  + "		numero_serie: '$numero_serie',\n"
			  + "		oid: '$oid',\n"
			  + "		fecha_descubrimiento: '$fecha_descubrimiento',\n"
			  + "		id_olts: '$id_olts',\n"
			  + "		estatus: '$estatus',\n"
			  + "		id_ejecucion: '$id_ejecucion',\n"
			  + "		alias: '$alias',\n"
			  + "		id_region: '$id_region',\n"
			  + "		frame: '$frame',\n"
			  + "		slot: '$slot',\n"
			  + "		port: '$port',\n"
			  + "		uid: '$uid',\n"
			  + "		tipo: '$tipo',\n"
			  + "		descripcionAlarma: '$descripcionAlarma',\n"
			  + "		tecnologia: '$tecnologia',\n"
			  + "		lastDownTime: '$lastDownTime',\n"
			  + "		actualizacion: '$actualizacion',\n"
			  + "		vip: '$vip',\n"	
			  + "	  },\n"
			  + "	  configuracion: '$olt.configuracion',\n"
			  + "	  ip: '$olt.ip',\n"
			  + "	  tecnologia: '$olt.tecnologia',\n"
			  + "	  id_configuracion: '$olt.id_configuracion',\n"
			  + "	},\n"
			  + "}\n"
			  , "{$unset: ['_id']}"})
	List<OntsConfiguracionDto> findOntsEmpresarialesMetricasEstatus();
	
	@Aggregation(pipeline = { 
			    "{\n"
			  + "        \"$group\": {\n"
			  + "                \"_id\": \"$id_olt\", \n"
			  + "                          \n"
			  + "          },\n"
			  + "}\n"
			  , "{\n"
			  + "		\"$lookup\":{\n"
			  + "			from: \"cat_olts\",\n"
			  + "			localField:\"_id\",\n"
			  + "			foreignField:\"id_olt\",\n"
			  + "			as: \"olts\",\n"
			  + "		}\n"
			  + "}\n"
			  , "{\n"
			  + "        $unwind: \"$olts\"\n"
			  + "}\n"
			  , "{ $replaceRoot: { newRoot: \"$olts\" } }"})
	List<CatOltsEntity> getOlts();
	

	@Aggregation(pipeline = { 
		      "{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
			, "{\n"
			+ "        $lookup:{\n"
			+ "            from: \"tb_inventario_onts_aux\",\n"
			+ "            localField:\"numero_serie\",\n"
			+ "            foreignField: \"numero_serie\",          \n"
			+ "            as:\"onts\"        \n"
			+ "        }    \n"
			+ " }\n"
			, " { $unwind:{ path:\"$onts\",  preserveNullAndEmptyArrays: true} }\n"
			, "	{ $match:{onts:null} }"
			, " {$unset: ['_id']}"
			})
	List<InventarioOntsAuxEntity> getOntsfaltantes(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt);
	
	
	@Aggregation(pipeline = { 
		        "{ $match:{$or:[{tipo:'E'}, {vip:1}]} }\n"
		      , "{\n"
		      + "		\"$lookup\":{\n"
		      + "			from: \"tb_inventario_onts_aux\",\n"
		      + "			localField:\"numero_serie\",\n"
		      + "			foreignField:\"numero_serie\",\n"
		      + "			as: \"onts\",\n"
		      + "		}\n"
		      + "}\n"
		      , "{\n"
		      + "        $unwind: \"$onts\"\n"
		      + "}\n"
		      , "{\n"
		      + "        $set:{\n"
		      + "            'onts.tipo':'$tipo',\n"
		      + "            'onts.vip':'$vip'\n"
		      + "        }\n"
		      + " }\n"
		      , "{ $replaceRoot: { newRoot: \"$onts\" } }"
			})
	List<InventarioOntsAuxEntity> findEmpresarialesAndVips();
	
	@Aggregation(pipeline = { 
	        "{$out:'tb_inventario_onts_resp'}"
		})
	void sentToResp();
	
	
	@Aggregation(pipeline = { 
		      "{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
			, "{\n"
	  		+ "        $lookup:{\n"
	  		+ "            from: \"auxiliar_estatus\",\n"
	  		+ "            localField:\"index\",\n"
	  		+ "            foreignField: \"index\",          \n"
	  		+ "            as:\"metrica\"\n"
	  		+ "        \n"
	  		+ "        }    \n"
	  		+ "    }\n"
	  		, " {\n"
	  		+ "        $set:{\n"
	  		+ "            fecha_modificacion:{$ifNull:[{$arrayElemAt : ['$metrica.fecha_poleo',0]}, 0]},\n"
	  		+ "            estatus:{$ifNull:[{$arrayElemAt : ['$metrica.estatus',0]}, 0]}\n"
	  		+ "        }\n"
	  		+ "}\n"
	  		, "{$unset:[\"metrica\", '_id']}\n"
	  		})
	List<AuxiliarEstatusEntity> updateEstatus(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt);
	


}
