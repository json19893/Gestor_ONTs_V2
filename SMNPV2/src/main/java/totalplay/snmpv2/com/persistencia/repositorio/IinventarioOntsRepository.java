package totalplay.snmpv2.com.persistencia.repositorio;

import org.springframework.data.mongodb.repository.Aggregation;
import org.springframework.data.mongodb.repository.Meta;
import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.data.mongodb.repository.Query;
import org.springframework.data.repository.query.Param;

import totalplay.snmpv2.com.negocio.dto.FaltantesDto;
import totalplay.snmpv2.com.negocio.dto.OntsConfiguracionDto;
import totalplay.snmpv2.com.persistencia.entidades.AuxiliarJoinEstatusEntity;
import totalplay.snmpv2.com.persistencia.entidades.CatOltsEntity;
import totalplay.snmpv2.com.persistencia.entidades.FaltantesEstatusEntity;
import totalplay.snmpv2.com.persistencia.entidades.FaltantesMetricasEntity;
import totalplay.snmpv2.com.persistencia.entidades.FaltantesMetricasManualEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioAuxTransEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsAuxEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsAuxManualEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsRespNCEEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioOntsTmpEntity;
import totalplay.snmpv2.com.persistencia.entidades.InventarioPuertosEntity;

import java.util.List;
import java.util.Optional;

public interface IinventarioOntsRepository extends MongoRepository<InventarioOntsEntity, String> {

	@Aggregation(pipeline = {
			 " {$match:{tipo:\"E\"}}\n"
			  , "{\n"
			  + "        $lookup:{\n"
			  + "            from: ?0,\n"
			  + "            localField:\"index\",\n"
			  + "            foreignField: \"index\",          \n"
			  + "            as:\"ont\"\n"
			  + "        \n"
			  + "        }    \n"
			  + "}\n"
			  , "{ $match:{ont:{$eq:[]}} }    \n"
			  , "{\n"
			  + "      $lookup: {\n"
			  + "    	from: 'cat_olts',\n"
			  + "    	localField: 'id_olt',\n"
			  + "    	foreignField: 'id_olt',\n"
			  + "    	pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "    	],\n"
			  + "    	as: 'olt',\n"
			  + "      },\n"
			  + "}\n"
			  , "{ $match: {olt: {$ne: []}} }\n"
			  , "{ $unwind: '$olt' }\n"
			  , " {\n"
			  + "        $project: {\n"
			  + "          ont:\"$$ROOT\",\n"
			  + "          configuracion: '$olt.configuracion',\n"
			  + "          ip: '$olt.ip',\n"
			  + "          tecnologia: '$olt.tecnologia',\n"
			  + "          id_configuracion: '$olt.id_configuracion',\n"
			  + "        },\n"
			  + " }\n"
			  , " {$unset: ['_id', \"ont.olt\"]}"})
	List<OntsConfiguracionDto> findOntsEmpresarialesMetricas(@Param("table") String table);

	@Aggregation(pipeline = {
			 " {$match:{tipo:\"E\"}}\n"
			  , "{\n"
			  + "        $lookup:{\n"
			  + "            from: ?0,\n"
			  + "            localField:\"indexFSP\",\n"
			  + "            foreignField: \"indexFSP\",          \n"
			  + "            as:\"ont\"\n"
			  + "        \n"
			  + "        }    \n"
			  + "}\n"
			  , "{ $match:{ont:{$eq:[]}} }    \n"
			  , "{\n"
			  + "      $lookup: {\n"
			  + "    	from: 'cat_olts',\n"
			  + "    	localField: 'id_olt',\n"
			  + "    	foreignField: 'id_olt',\n"
			  + "    	pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "    	],\n"
			  + "    	as: 'olt',\n"
			  + "      },\n"
			  + "}\n"
			  , "{ $match: {olt: {$ne: []}} }\n"
			  , "{ $unwind: '$olt' }\n"
			  , " {\n"
			  + "        $project: {\n"
			  + "          ont:\"$$ROOT\",\n"
			  + "          configuracion: '$olt.configuracion',\n"
			  + "          ip: '$olt.ip',\n"
			  + "          tecnologia: '$olt.tecnologia',\n"
			  + "          id_configuracion: '$olt.id_configuracion',\n"
			  + "        },\n"
			  + " }\n"
			  , " {$unset: ['_id', \"ont.olt\"]}"})
	List<OntsConfiguracionDto> findOntsEmpresarialesMetricasFrameSlotPort(@Param("table") String table);


	@Aggregation(pipeline = {
			    " {$match:{tipo:\"E\"}}\n"
			  , "{\n"
			  + "        $lookup:{\n"
			  + "            from: ?0,\n"
			  + "            localField:\"index\",\n"
			  + "            foreignField: \"index\",          \n"
			  + "            as:\"ont\"\n"
			  + "        \n"
			  + "        }    \n"
			  + "}\n"
			  , "{ $match:{ont:{$eq:[]}} }    \n"
			  , "{\n"
			  + "      $lookup: {\n"
			  + "    	from: 'cat_olts',\n"
			  + "    	localField: 'id_olt',\n"
			  + "    	foreignField: 'id_olt',\n"
			  + "    	pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "    	],\n"
			  + "    	as: 'olt',\n"
			  + "      },\n"
			  + "}\n"
			  , "{ $match: {olt: {$ne: []}} }\n"
			  , "{ $unwind: '$olt' }\n"
			  , " {\n"
			  + "        $project: {\n"
			  + "          ont:\"$$ROOT\",\n"
			  + "          configuracion: '$olt.configuracion',\n"
			  + "          ip: '$olt.ip',\n"
			  + "          tecnologia: '$olt.tecnologia',\n"
			  + "          id_configuracion: '$olt.id_configuracion',\n"
			  + "        },\n"
			  + " }\n"
			  , " {$unset: ['_id', \"ont.olt\"]}"})
	List<OntsConfiguracionDto> findOntsEmpresarialesMetricasEstatus(@Param("table") String table);

	@Aggregation(pipeline = {
			    "{\n"
			  + "        \"$group\": {\n"
			  + "                \"_id\": \"$id_olt\", \n"
			  + "                          \n"
			  + "          },\n"
			  + "}\n"
			  , "{\n"
			  + "		\"$lookup\":{\n"
			  + "			from: \"cat_olts\",\n"
			  + "			localField:\"_id\",\n"
			  + "			foreignField:\"id_olt\",\n"
			  + "			as: \"olts\",\n"
			  + "		}\n"
			  + "}\n"
			  , "{\n"
			  + "        $unwind: \"$olts\"\n"
			  + "}\n"
			  , "{ $replaceRoot: { newRoot: \"$olts\" } }"})
	List<CatOltsEntity> getOlts();


	@Aggregation(pipeline = {
		      "{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
			, "{\n"
			+ "        $lookup:{\n"
			+ "            from: \"tb_inventario_onts_aux\",\n"
			+ "            localField:\"numero_serie\",\n"
			+ "            foreignField: \"numero_serie\",          \n"
			+ "            as:\"onts\"        \n"
			+ "        }    \n"
			+ " }\n"
			, " { $unwind:{ path:\"$onts\",  preserveNullAndEmptyArrays: true} }\n"
			, "	{ $match:{onts:null} }"
			, " {$unset: ['_id']}"
			})
	List<InventarioOntsAuxEntity> getOntsfaltantes(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt);


	@Aggregation(pipeline = {
				"{$unionWith:\"tb_inventario_onts_pdm\"}"
		      ,  "{ $match:{$or:[{tipo:'E'}, {vip:1}, {sa:true}]} }\n"
		      , "{\n"
		      + "		\"$lookup\":{\n"
		      + "			from: \"tb_inventario_onts_aux\",\n"
		      + "			localField:\"numero_serie\",\n"
		      + "			foreignField:\"numero_serie\",\n"
		      + "			as: \"onts\",\n"
		      + "		}\n"
		      + "}\n"
		      , "{\n"
		      + "        $unwind: \"$onts\"\n"
		      + "}\n"
		      , "{\n"
		      + "        $set:{\n"
		      + "            'onts.tipo':'$tipo',\n"
		      + "            'onts.vip':'$vip'\n"
		      + "            'onts.sa':'$sa'\n"
		      + "        }\n"
		      + " }\n"
		      , "{ $replaceRoot: { newRoot: \"$onts\" } }"
			})
	List<InventarioOntsAuxEntity> findEmpresarialesAndVips();

	@Aggregation(pipeline = {
	        "{$out:'tb_inventario_onts_resp'}"
		})
	void sentToResp();


	@Aggregation(pipeline = {
		      "{$match: {id_olt:?1} }\n"
			, "{\n"
	  		+ "        $lookup:{\n"
	  		+ "            from: \"auxiliar_estatus\",\n"
	  		+ "            localField:\"index\",\n"
	  		+ "            foreignField: \"index\",          \n"
	  		+ "            as:\"metrica\"\n"
	  		+ "        \n"
	  		+ "        }    \n"
	  		+ "    }\n"
	  		, " {\n"
	  		+ "        $set:{\n"
	  		+ "            fecha_modificacion:{$ifNull:[{$arrayElemAt : ['$metrica.fecha_poleo',0]}, {$dateSubtract:{ startDate: new Date(), unit: \"hour\", amount: 6}} ]},\n"
	  		+ "            estatus:{$ifNull:[{$cond: [ { $eq: [ {$arrayElemAt : ['$metrica.estatus',0]}, 0 ] },null, {$arrayElemAt : ['$metrica.estatus',0]} ]}, '$estatus', 0]}\n"
	  		+ "        }\n"
	  		+ "}\n"
	  		, "{$unset:[\"metrica\", '_id']}\n"
	  		})
	List<AuxiliarJoinEstatusEntity> updateEstatus(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt);

	@Aggregation(pipeline = {
		        "{$match:{id_olt: ?0 }}\n"
		      , " {\n"
		      + "		'$lookup':{\n"
		      + "			from: 'auxiliar_join_estatus',\n"
		      + "			localField:'numero_serie',\n"
		      + "			foreignField:'numero_serie',\n"
		      + "			as: 'onts',\n"
		      + "		}\n"
		      + "}    \n"
		      , "{$match:{onts:[]}}\n"
		      , "{$unset:['onts', '_id']}  "
	  		})
	List<AuxiliarJoinEstatusEntity> completarInventario( @Param("idOLt") Integer idOLt);
	

	@Aggregation(pipeline = {
				"{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
			  ,	" {$match:{oid:{$ne:null} }}\n"
			  , "{\n"
			  + "        $lookup:{\n"
			  + "            from: ?2,\n"
			  + "            localField: ?3 ,\n"
			  + "            foreignField: ?3 ,          \n"
			  + "            as:\"ont\"\n"
			  + "        \n"
			  + "        }    \n"
			  + "}\n"
			  , "{ $match:{ont:{$eq:[]}} }    \n"
			  , "{\n"
	  		  + "		\"$lookup\":{\n"
	  		  + "			from: \"monitor_poleo_olt_metrica\",\n"
	  		  + "			localField:\"id_olt\",\n"
	  		  + "			foreignField:\"id_olt\",\n"
	  		  + "			pipeline:[\n"
	  		  + "			    {$match:{id_poleo: ?4 }}\n"
	  		  + "			],"
	  		  + "			as: \"monitor\",\n"
	  		  + "		}\n"
	  		  + "    }"
			  , "{\n"
			  + "      $lookup: {\n"
			  + "    	from: 'cat_olts',\n"
			  + "    	localField: 'id_olt',\n"
			  + "    	foreignField: 'id_olt',\n"
			  + "    	pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "    	],\n"
			  + "    	as: 'olt',\n"
			  + "      },\n"
			  + "}\n"
			  , "{ $match: {olt: {$ne: []}} }\n"
			  , "{ $unwind: '$olt' }\n"
			  , "{ $unwind: '$monitor' }\n"
			  , " {\n"
			  + "        $project: {\n"
			  + "          ont:\"$$ROOT\",\n"
			  + "          configuracion: '$olt.configuracion',\n"
			  + "          ip: '$olt.ip',\n"
			  + "          tecnologia: '$olt.tecnologia',\n"
			  + "          id_configuracion: '$olt.id_configuracion',\n"
			  + "          error:{$ifNull:['$monitor.error', false]},\n"
			  + "          poleable:{$ifNull:['$olt.estatus', 0]},\n"
			  + "        },\n"
			  + " }\n"
			  , " {$unset: ['_id', \"ont.olt\"]}"})
	List<FaltantesEstatusEntity> getFaltantesEstatus(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt, @Param("table") String table, @Param("join") String join, @Param("idEjecucion") String idEjecucion);


	@Aggregation(pipeline = {
			    "{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
			  ,	" {$match:{oid:{$ne:null} }}\n"
			  , "{\n"
			  + "        $lookup:{\n"
			  + "            from: ?2,\n"
			  + "            localField: ?3 ,\n"
			  + "            foreignField: ?3 ,          \n"
			  + "            as:\"ont\"\n"
			  + "        \n"
			  + "        }    \n"
			  + "}\n"
			  , "{ $match:{ont:{$eq:[]}} }    \n"
			  , "{\n"
			  + "		\"$lookup\":{\n"
			  + "			from: \"monitor_poleo_olt_metrica\",\n"
			  + "			localField:\"id_olt\",\n"
			  + "			foreignField:\"id_olt\",\n"
			  + "			pipeline:[\n"
			  + "			    {$match:{id_metrica: ?5 }},\n"
			  + "			    {$match:{id_poleo: ?4 }}\n"
			  + "			],"
			  + "			as: \"monitor\",\n"
			  + "		}\n"
			  + " }"
			  , "{\n"
			  + "      $lookup: {\n"
			  + "    	from: 'cat_olts',\n"
			  + "    	localField: 'id_olt',\n"
			  + "    	foreignField: 'id_olt',\n"
			  + "    	pipeline: [\n"
			  + "    	{\n"
			  + "    	  $lookup: {\n"
			  + "    		from: 'cat_configuracion',\n"
			  + "    		localField: 'id_configuracion',\n"
			  + "    		foreignField: 'id_configuracion',\n"
			  + "    		as: 'configuracion',\n"
			  + "    	  },\n"
			  + "    	},\n"
			  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
			  + "    	],\n"
			  + "    	as: 'olt',\n"
			  + "      },\n"
			  + "}\n"
			  , "{ $match: {olt: {$ne: []}} }\n"
			  , "{ $unwind: '$olt' }\n"
			  , "{ $unwind: '$monitor' }\n"
			  ,  "{\n"
			+ "            $project: \n"
			+ "            {\n"
			+ "                ont:{ $cond: [   {$or:[  { $eq: [ \"$monitor.error\", true  ] },  { $eq: [ '$olt.estatus',  0 ] }  ]},\n"
			+ "                              \n"
			+ "                              {\n"
			+ "                                  oid:\"$oid\",\n"
			+ "                                  error:true,\n"
			+ "                                  fecha_poleo:{$dateSubtract:{ startDate: new Date(), unit: \"hour\", amount: 6}},\n"
			+ "                                  valor:{$cond:[{ $eq: [ \"$monitor.resultado\", \"Sin metrica\"  ] }, \"$monitor.resultado\" ,\"Problemas al polear la olt\"] },\n"
			+ "                                  id_metrica: \"$monitor.id_metrica\",\n"
			+ "                                  id_ejecucion: \"$monitor.id_poleo\",\n"
			+ "                                  id_region:\"$id_region\",\n"
			+ "                                  tecnologia:\"$tecnologia\",\n"
			+ "                                  id_olt:\"$id_olt\"\n"
			+ "                              },                              \n"
			+ "                              {\n"
			+ "                                  ont:\"$$ROOT\",\n"
			+ "                                  configuracion: '$olt.configuracion',\n"
			+ "                                  ip: '$olt.ip',\n"
			+ "                                  tecnologia: '$olt.tecnologia',\n"
			+ "                                  id_configuracion: '$olt.id_configuracion',\n"
			+ "                                  error:{$ifNull:['$monitor.error', false]},\n"
			+ "                                  poleable:{$ifNull:['$olt.estatus', 0]},\n"
			+ "                              } \n"
			+ "                                     \n"
			+ "                ]},\n"
			+ "               error:{ $cond: [   {$or:[  { $eq: [ \"$monitor.error\", true  ] },  { $eq: [ '$olt.estatus',  0 ] }  ]}, true, false ]}\n"
			+ "            }         \n"
			+ "}\n"
			, "{\n"
			+ "        \"$group\": {\n"
			+ "                \"_id\": \"$error\", \n"
			+ "                \"errores\":{ $push: { $cond: [ { $eq: [ \"$error\", true  ] }, \"$ont\", null ]} },\n"
			+ "                \"onts\":{ $push: { $cond: [ { $eq: [ \"$error\", false  ] },   \"$ont\", null ]} },\n"
			+ "                           \n"
			+ "          },\n"
			+ "}\n"
			, "{ \n"
			+ "        $set: {\n"
			+ "            errores:{ $cond: [ { $eq: [ {$ifNull:[{$arrayElemAt : ['$errores.id_ejecucion',0] }, true]}, true  ] }, null , \"$errores\" ]},\n"
			+ "            onts:{ $cond: [ { $eq: [ {$ifNull:[{$arrayElemAt : ['$onts.ont',0] }, true]}, true  ] }, null , \"$onts\" ]}\n"
			+ "        }\n"
			+ "}\n"
			, " {$unset: ['_id', \"onts.ont.olt\", \"onts.ont.monitor\", \"onts.ont.olts\", \"onts.ont.configuracion\", \"onts.ont.ont\", \"errores._id\"]}"})
	List<FaltantesDto> getFaltantesMetricas(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt, @Param("table") String table, @Param("join") String join, @Param("idEjecucion") String  idEjecucion, @Param("metrica") Integer  metrica);


	@Aggregation(pipeline = {
		    "{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
		  ,	" {$match:{oid:{$ne:null} }}\n"
		  , "{\n"
		  + "        $lookup:{\n"
		  + "            from: ?2,\n"
		  + "            localField: ?3 ,\n"
		  + "            foreignField: ?3 ,          \n"
		  + "            as:\"ont\"\n"
		  + "        \n"
		  + "        }    \n"
		  + "}\n"
		  , "{ $match:{ont:{$eq:[]}} }    \n"
		  , "{\n"
		  + "		\"$lookup\":{\n"
		  + "			from: \"monitor_poleo_olt_metrica\",\n"
		  + "			localField:\"id_olt\",\n"
		  + "			foreignField:\"id_olt\",\n"
		  + "			pipeline:[\n"
		  + "			    {$match:{id_poleo: ?4 }}\n"
		  + "			],"
		  + "			as: \"monitor\",\n"
		  + "		}\n"
		  + " }"
		  , "{\n"
		  + "      $lookup: {\n"
		  + "    	from: 'cat_olts',\n"
		  + "    	localField: 'id_olt',\n"
		  + "    	foreignField: 'id_olt',\n"
		  + "    	pipeline: [\n"
		  + "    	{\n"
		  + "    	  $lookup: {\n"
		  + "    		from: 'cat_configuracion',\n"
		  + "    		localField: 'id_configuracion',\n"
		  + "    		foreignField: 'id_configuracion',\n"
		  + "    		as: 'configuracion',\n"
		  + "    	  },\n"
		  + "    	},\n"
		  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
		  + "    	],\n"
		  + "    	as: 'olt',\n"
		  + "      },\n"
		  + "}\n"
		  , "{ $match: {olt: {$ne: []}} }\n"
		  , "{ $unwind: '$olt' }\n"
		  , "{ $unwind: '$monitor' }\n"
		  , " {\n"
		  + "        $project: {\n"
		  + "          ont:\"$$ROOT\",\n"
		  + "          configuracion: '$olt.configuracion',\n"
		  + "          ip: '$olt.ip',\n"
		  + "          tecnologia: '$olt.tecnologia',\n"
		  + "          id_configuracion: '$olt.id_configuracion',\n"
		  + "          error:{$ifNull:['$monitor.error', false]},\n"
		  + "          poleable:{$ifNull:['$olt.estatus', 0]},\n"
		  + "        },\n"
		  + " }\n"
		  , " {$unset: ['_id', \"ont.olt\"]}"
		  })
List<FaltantesMetricasEntity> getFaltantesMetricas2(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt, @Param("table") String table, @Param("join") String join, @Param("idEjecucion") String  idEjecucion);


	@Aggregation(pipeline = {
			"{$match:{$and:[{id_region:?0},{id_olt:?1}]}}\n"
		  ,	" {$match:{oid:{$ne:null} }}\n"
		  , "{\n"
		  + "        $lookup:{\n"
		  + "            from: ?2,\n"
		  + "            localField: ?3 ,\n"
		  + "            foreignField: ?3 ,          \n"
		  + "            as:\"ont\"\n"
		  + "        \n"
		  + "        }    \n"
		  + "}\n"
		  , "{ $match:{ont:{$eq:[]}} }    \n"
		  , "{\n"
		  + "      $lookup: {\n"
		  + "    	from: 'cat_olts',\n"
		  + "    	localField: 'id_olt',\n"
		  + "    	foreignField: 'id_olt',\n"
		  + "    	pipeline: [\n"
		  + "    	{\n"
		  + "    	  $lookup: {\n"
		  + "    		from: 'cat_configuracion',\n"
		  + "    		localField: 'id_configuracion',\n"
		  + "    		foreignField: 'id_configuracion',\n"
		  + "    		as: 'configuracion',\n"
		  + "    	  },\n"
		  + "    	},\n"
		  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
		  + "    	],\n"
		  + "    	as: 'olt',\n"
		  + "      },\n"
		  + "}\n"
		  , "{ $match: {olt: {$ne: []}} }\n"
		  , "{ $unwind: '$olt' }\n"
		  , "{ $unwind: '$monitor' }\n"
		  , " {\n"
		  + "        $project: {\n"
		  + "          ont:\"$$ROOT\",\n"
		  + "          configuracion: '$olt.configuracion',\n"
		  + "          ip: '$olt.ip',\n"
		  + "          tecnologia: '$olt.tecnologia',\n"
		  + "          id_configuracion: '$olt.id_configuracion',\n"
		  + "          error:{$ifNull:['$monitor.error', false]},\n"
		  + "          poleable:{$ifNull:['$olt.estatus', 0]},\n"
		  + "        },\n"
		  + " }\n"
		  , " {$unset: ['_id', \"ont.olt\"]}"})
List<FaltantesMetricasManualEntity> getFaltantesMetricasManual(@Param("idRegion") Integer idRegion, @Param("idOLt") Integer idOLt, @Param("table") String table, @Param("join") String join);
	
	@Aggregation(pipeline = { 
			"{$unionWith:\"tb_inventario_onts_pdm\"}"
	      , "{ $match:{$or:[{tipo:'E'}, {vip:1}, {sa:true}]} }\n"
	      , "{\n"
	      + "		\"$lookup\":{\n"
	      + "			from: \"tb_inventario_onts_aux_manual\",\n"
	      + "			localField:\"numero_serie\",\n"
	      + "			foreignField:\"numero_serie\",\n"
	      + "			as: \"onts\",\n"
	      + "		}\n"
	      + "}\n"
	      , "{\n"
	      + "        $unwind: \"$onts\"\n"
	      + "}\n"
	      , "{\n"
	      + "        $set:{\n"
	      + "            'onts.tipo':'$tipo',\n"
	      + "            'onts.vip':'$vip'\n"
	      + "            'onts.sa':'$sa'\n"
	      + "        }\n"
	      + " }\n"
	      , "{ $replaceRoot: { newRoot: \"$onts\" } }"
		})
	List<InventarioOntsAuxManualEntity> getEmpresarialesVipsManuales();
	
	
	/**
	 * Obtiene una ont a traves de un numero de serie
	 * @param numSerie
	 * @return InventarioOntsEntity - Representa la ont filtrada por el numero de serie.
	 */
	@Query("{numero_serie: ?0}")
	InventarioOntsEntity getOntBySerialNumber(String numSerie);

	/**
	 * Obtiene todas las onts asociadas a una olt.
	 * @param idOlt
	 * @return - List<InventarioOntsEntity> Es una lista de las onts pertenecientes a una olt.
	 */
	@Query("{id_olt: ?0}")
	List<InventarioOntsEntity> getOntsListByIdOlt(Integer idOlt);

	@Aggregation(pipeline = {"{$match:{$and:[{id_olt:?0},{oid:?1}]}}"})
	InventarioOntsEntity getOntByOid(@Param("idOlt") Integer idOlt, @Param("oid") String oid);
	
	@Aggregation(pipeline = {
			//  "{$match:{numero_serie:'48575443E853D9A7'}}"
			  "{\r\n"
			+ "		\"$lookup\":{\r\n"
			+ "			from: \"tb_inventario_onts_nce\",\r\n"
			+ "			localField: \"numero_serie\",\r\n"
			+ "            foreignField: \"sn\",\r\n"
			+ "			as: \"onts\",\r\n"
			+ "		}			\r\n"
			+ "	}\r\n"
			, "	{ $match:{onts:{$eq:[]}} }"
			, " {\n"
			+ "		\"$lookup\":{\n"
			+ "			from: \"tb_inventario_onts_resp_nce\",\n"
			+ "			localField: \"numero_serie\",\n"
			+ "            foreignField: \"numero_serie\",\n"
			+ "			as: \"nce\",\n"
			+ "		}			\n"
			+ "	}\n"
			, "	{ $match:{onts:{$eq:[]}} }\n"
			, "	{ $match:{nce:{$eq:[]}} }"
			, " {$unset:[_id]}"
		})
	@Meta(allowDiskUse = true)
	List<InventarioOntsRespNCEEntity> getSobrantesInv();
	
	
	@Aggregation(pipeline = {
			//  "{$match:{numero_serie:'48575443E853D9A7'}}"
			  "{\r\n"
			+ "		\"$lookup\":{\r\n"
			+ "			from: \"tb_inventario_onts_nce\",\r\n"
			+ "			localField: \"numero_serie\",\r\n"
			+ "            foreignField: \"sn\",\r\n"
			+ "			as: \"onts\",\r\n"
			+ "		}			\r\n"
			+ "	}\r\n"
			, "	{ $match:{onts:{$eq:[]}} }"
			, " {\n"
			+ "		\"$lookup\":{\n"
			+ "			from: \"tb_inventario_onts_resp_nce\",\n"
			+ "			localField: \"numero_serie\",\n"
			+ "            foreignField: \"numero_serie\",\n"
			+ "			as: \"nce\",\n"
			+ "		}			\n"
			+ "	}\n"
			, "	{ $match:{onts:{$eq:[]}} }\n"
			, "	{ $match:{nce:{$eq:[]}} }"
		})
	@Meta(allowDiskUse = true)
	List<InventarioOntsEntity> eliminarSobrantes();
	
	@Aggregation(pipeline = {
			"{$match:{id_olt:?0 }}\n"
		  , " {$match:{tipo:\"E\"}}\n"
		  , " {\n"
		  + "      $lookup: {\n"
		  + "    	from: 'cat_olts',\n"
		  + "    	localField: 'id_olt',\n"
		  + "    	foreignField: 'id_olt',\n"
		  + "    	pipeline: [\n"
		  + "    	{\n"
		  + "    	  $lookup: {\n"
		  + "    		from: 'cat_configuracion',\n"
		  + "    		localField: 'id_configuracion',\n"
		  + "    		foreignField: 'id_configuracion',\n"
		  + "    		as: 'configuracion',\n"
		  + "    	  },\n"
		  + "    	},\n"
		  + "    	{$unwind: {path: '$configuracion',preserveNullAndEmptyArrays: true}},\n"
		  + "    	],\n"
		  + "    	as: 'olt',\n"
		  + "      },\n"
		  + "}\n"
		  , "{ $match: {olt: {$ne: []}} }\n"
		  , "{ $unwind: '$olt' }\n"
		  , " {\n"
		  + "        $project: {\n"
		  + "          ont:\"$$ROOT\",\n"
		  + "          configuracion: '$olt.configuracion',\n"
		  + "          ip: '$olt.ip',\n"
		  + "          tecnologia: '$olt.tecnologia',\n"
		  + "          id_configuracion: '$olt.id_configuracion',\n"
		  + "        },\n"
		  + " }\n"
		  , " {$unset: ['_id', \"ont.olt\"]}"})
	List<OntsConfiguracionDto> getEmpresarialesByOlt(@Param("olt") Integer idOlt);
	
	
}
